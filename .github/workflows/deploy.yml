name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            echo "[INFO] Criando backup do banco..."
            mkdir -p ~/backups
            docker exec maketa_db pg_dump -U admin maketa_db > ~/backups/maketa_backup_$(date +'%Y%m%d_%H%M%S').dump

            echo "[INFO] Atualizando aplicação..."
            cd ~/Maketa/MAKETA
            git reset --hard
            git pull origin main

            echo "[INFO] Derrubando containers (mantendo volumes)..."
            docker compose down

            echo "[INFO] Subindo containers (build + remove órfãos)..."
            docker compose up -d --build --remove-orphans

            echo "[INFO] Verificando saúde da aplicação..."
            HEALTH_JSON=$(curl -sSf http://localhost:5001/health) || (echo "[ERRO] Health endpoint indisponível" && exit 1)
            echo "$HEALTH_JSON"
            if command -v jq >/dev/null 2>&1; then
              APP_STATUS=$(echo "$HEALTH_JSON" | jq -r '.app')
              DB_STATUS=$(echo "$HEALTH_JSON" | jq -r '.db')
              [ "$APP_STATUS" = "ok" ] && [ "$DB_STATUS" = "ok" ] || (echo "[ERRO] Health check falhou (app=$APP_STATUS, db=$DB_STATUS)" && exit 1)
            else
              echo "[WARN] jq não encontrado; validando via grep"
              echo "$HEALTH_JSON" | grep -q '\"app\":\"ok\"' && echo "$HEALTH_JSON" | grep -q '\"db\":\"ok\"' || (echo "[ERRO] Health check falhou" && exit 1)
            fi

            echo "[INFO] Deploy finalizado com sucesso!"